# Rules in this file were initially inferred by Visual Studio IntelliCode from the C:\智擎科技\Git\Funday.Presale.API\Funday.Presale.API\ codebase based on best match to current usage at 2021/11/16
# You can modify the rules from these initially generated values to suit your own policies
# You can learn more about editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
[*.cs]


#Core editorconfig formatting - indentation

#use soft tabs (spaces) for indentation
indent_style = space

#Formatting - new line options

#require members of object intializers to be on separate lines
csharp_new_line_before_members_in_object_initializers = true

#Formatting - spacing options

#require NO space between a cast and the value
csharp_space_after_cast = false
#require a space after a keyword in a control flow statement such as a for loop
csharp_space_after_keywords_in_control_flow_statements = true
#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
csharp_space_between_method_call_parameter_list_parentheses = false
#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
csharp_space_between_method_declaration_parameter_list_parentheses = false

#Formatting - wrapping options

#leave code block on single line
csharp_preserve_single_line_blocks = true

#Style - expression bodied member options

#prefer block bodies for constructors
csharp_style_expression_bodied_constructors = false:suggestion
#prefer block bodies for methods
csharp_style_expression_bodied_methods = false:suggestion
#prefer expression-bodied members for properties
csharp_style_expression_bodied_properties = true:suggestion

#Style - Expression-level  preferences

#prefer objects to be initialized using object initializers when possible
dotnet_style_object_initializer = true:suggestion

#Style - implicit and explicit types

#prefer var over explicit type in all cases, unless overridden by another code style rule
csharp_style_var_elsewhere = true:suggestion

#Style - language keyword and framework type options

#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion

#Style - modifier options

#prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods.
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

#Style - Modifier preferences

#when this rule is set to a list of modifiers, prefer the specified ordering.
csharp_preferred_modifier_order = public,private,readonly,static:suggestion

#Style - qualification options

#prefer fields not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_field = false:suggestion
#prefer properties not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_property = false:suggestion

# CS8625: 無法將 null 常值轉換成不可為 Null 的參考型別。
dotnet_diagnostic.CS8625.severity = none

# CS8602: 可能 null 參考的取值 (dereference)。
dotnet_diagnostic.CS8602.severity = none

# CS8618: 退出建構函式時，不可為 Null 的欄位必須包含非 Null 值。請考慮宣告為可為 Null。
dotnet_diagnostic.CS8618.severity = none

# CS8601: 可能有 Null 參考指派。
dotnet_diagnostic.CS8601.severity = none

# CS8604: 可能有 Null 參考引數。
dotnet_diagnostic.CS8604.severity = none

# CA1848: 請使用 LoggerMessage 委派
dotnet_diagnostic.CA1848.severity = none

# CS8600: 正在將 Null 常值或可能的 Null 值轉換為不可為 Null 的型別。
dotnet_diagnostic.CS8600.severity = none
